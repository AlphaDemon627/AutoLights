/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AutoLightsUI;

import autolightstests.PrintTest;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Mido Austin
 */
public class HighestCountsData extends javax.swing.JFrame {

    /**
     * Creates new form HighestCountsData
     */
    public HighestCountsData() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("autolightsdb?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        highestCountsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT h FROM HighestCounts h");
        highestCountsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : highestCountsQuery.getResultList();
        highestCountsQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT h FROM HighestCounts h");
        highestCountsList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : highestCountsQuery1.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        HighestCounts = new javax.swing.JTable();
        back = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Highest Weekly Counts");

        HighestCounts.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, highestCountsList, HighestCounts);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${movementId}"));
        columnBinding.setColumnName("Movement Id");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${timeId}"));
        columnBinding.setColumnName("Time Id");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${day}"));
        columnBinding.setColumnName("Day");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lgvCount}"));
        columnBinding.setColumnName("Lgv Count");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${hgvCount}"));
        columnBinding.setColumnName("Hgv Count");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalVehCount}"));
        columnBinding.setColumnName("Total Veh Count");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(HighestCounts);

        back.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        back.setText("RETURN");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        print.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Highest Weekly Counts");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        String path = "";
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jfc.showSaveDialog(this);
        
        if(x == JFileChooser.APPROVE_OPTION){
            path= jfc.getSelectedFile().getPath();
        }
        
        Document doc = new Document();
        
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path+"HighestCounts.pdf"));
            doc.open();
            
            PdfPTable tbl = new PdfPTable(7);
            
            //cell headers
            tbl.addCell("Movement Id");
            tbl.addCell("Time Id");
            tbl.addCell("Day");
            tbl.addCell("Date");
            tbl.addCell("Highest HGV Count");
            tbl.addCell("Lowest LGV Count");
            tbl.addCell("Total Vehicle Count");
            
            for (int a=0; a<HighestCounts.getRowCount(); a++){
                
                String move_id = HighestCounts.getValueAt(a, 0).toString();
                String time_id = HighestCounts.getValueAt(a, 1).toString();
                String day = HighestCounts.getValueAt(a, 2).toString();
                String date = HighestCounts.getValueAt(a, 3).toString();
                String highestLgv = HighestCounts.getValueAt(a, 4).toString();
                String highestHgv = HighestCounts.getValueAt(a, 5).toString();
                String totalVeh = HighestCounts.getValueAt(a, 6).toString();
                
                tbl.addCell(move_id);
                tbl.addCell(time_id);
                tbl.addCell(day);
                tbl.addCell(date);
                tbl.addCell(highestLgv);
                tbl.addCell(highestHgv);
                tbl.addCell(totalVeh);
            }
            
            doc.add(tbl);
            //JOptionPane.showMessageDialog(null, "pdf file generated", "ALERT MESSAGE", JOptionPane.INFORMATION_MESSAGE);
            int n = JOptionPane.showConfirmDialog(
                            this, "pdf file generated \n would you like to open?",
                            "",
                            JOptionPane.YES_NO_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                doc.close();
                try {
                    //Desktop.getDesktop().open(new File("C:\\Users\\Mido Austin"));
                    //open file directly
                    if (Desktop.isDesktopSupported()) {
                        try {
                            File myFile = new File("C:\\Users\\Mido Austin\\DocumentsHighestCounts.pdf");
                            Desktop.getDesktop().open(myFile);
                        } catch (IOException ex) {
                            // no application registered for PDFs
                        }
                    }else{
                        //open file location
                        JOptionPane.showMessageDialog(null, "no suitable application found", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                        Desktop.getDesktop().open(new File("C:\\Users\\Mido Austin"));
                    }
   
                } catch (IOException ex) {
                    Logger.getLogger(HighestCountsData.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (n == JOptionPane.NO_OPTION) {
                doc.close();
            } else {
                
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PrintTest.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(PrintTest.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_printActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new Management().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HighestCountsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HighestCountsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HighestCountsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighestCountsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HighestCountsData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HighestCounts;
    private javax.swing.JButton back;
    private javax.persistence.EntityManager entityManager;
    private java.util.List<AutoLightsUI.HighestCounts> highestCountsList;
    private java.util.List<AutoLightsUI.HighestCounts> highestCountsList1;
    private javax.persistence.Query highestCountsQuery;
    private javax.persistence.Query highestCountsQuery1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton print;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
